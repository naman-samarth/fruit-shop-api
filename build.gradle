plugins {
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
    id 'org.sonarqube' version "3.3"
}

sonarqube {

    def sonarexclusions = [
            "entities/**",
            "exceptions/**",
            "repositories/**",
            "app/**"
    ]

    properties {
        property 'sonar.projectName', 'SpringMVCRest'
        property 'sonar.projectKey', 'spring-mvc-rest'
        property 'sonar.exclusions', sonarexclusions
    }
}

subprojects {

    group = 'com.naman'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '11'

    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'io.spring.dependency-management'

    repositories {
        mavenCentral()
    }

    dependencyManagement {
        imports {
            mavenBom("org.springframework.boot:spring-boot-dependencies:2.6.2")
        }
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.mapstruct:mapstruct:1.4.2.Final'
        implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.4'
        compileOnly 'org.projectlombok:lombok'
        runtimeOnly 'com.h2database:h2'
        annotationProcessor 'org.projectlombok:lombok'
        annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    test {
        useJUnitPlatform()
    }

    sonarqube {
        properties {
            property "sonar.sources", "src/main"
            property "sonar.tests", "src/test"
            property "sonar.coverage.jacoco.xmlReportPaths", "../build/reports/jacoco/codeCoverageReport/codeCoverageReport.xml"
        }
    }

    jacocoTestReport {
        reports {
            xml.enabled true
        }
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}
